(rule
 (targets hello-world.lox.out)
 (deps hello-world.lox)
 (action (with-outputs-to %{targets} (run %{bin:saumon} %{deps}))))
(rule
 (alias runtest)
 (deps
  (:ref hello-world.lox.expected)
  (:out hello-world.lox.out))
 (action (diff %{ref} %{out})))

(rule
 (targets variables.lox.out)
 (deps variables.lox)
 (action (with-outputs-to %{targets} (run %{bin:saumon} %{deps}))))
(rule
 (alias runtest)
 (deps
  (:ref variables.lox.expected)
  (:out variables.lox.out))
 (action (diff %{ref} %{out})))

(rule
 (targets scopes.lox.out)
 (deps scopes.lox)
 (action (with-outputs-to %{targets} (run %{bin:saumon} %{deps}))))
(rule
 (alias runtest)
 (deps
  (:ref scopes.lox.expected)
  (:out scopes.lox.out))
 (action (diff %{ref} %{out})))

(rule
 (targets if-else.lox.out)
 (deps if-else.lox)
 (action (with-outputs-to %{targets} (run %{bin:saumon} %{deps}))))
(rule
 (alias runtest)
 (deps
  (:ref if-else.lox.expected)
  (:out if-else.lox.out))
 (action (diff %{ref} %{out})))
